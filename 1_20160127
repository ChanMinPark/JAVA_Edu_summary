
	1. 어제의 Review(기본개요)
		1. 자바의 가장 큰 특징
			1. 플랫폼 독립적=Anywhere
        		 내가 만든 코드가 어떤 플랫폼에서도 실행 된다.
        		 JMV(Java Virtual Mechine)으로 가능함.
			2. 객체지향(OOP)
			3. 런타임언어
        		  컴파일 하기는 하지만, 메모리 할당이 컴파일 때가 아니라 실행시에 된다.

		2. Data Type
			1. Primitive Type
				1. 정수 - byte, short, int, long
				2. 부동소수점 - float, double
				3. 논리 - Boolean - true, false
				4. 문자 - char - 0~65535

			2. Reference Type
				1. 클래스
				2. 배열


		3. 개발 환경설정
			1. JDK 설치
			2. Eclipse 설치 (EE용)

		4. 연산자
			1. 3항 - (조건문) ? true : false
			2. 논리 - short circuit(&&, ||), !
			3. 비트
				1. 이동 - <<, >>, >>>
				2. 연산 - &, |, ~, ^

			4. 기본 - 사칙, 할당





	2. 저장에 대한 진화
		1. 배열이용저장
			1. 제어문, 반복문

		2. OOP(객체)
		3. Collection
		4. File 저장
		5. DB 저장
		6. Web interface로 변환




	3. 제어문
	  메소드 내에서는 절차식으로 수행되는제 제어문을 이용한 흐름 제어가 가능하다.
		1. 조건문
		   조건식 결과에 따라 중괄호 블록을 실행할지 여부를 결정한다.
			1. if - 반드시 조건문이 들어가서 true/fasle로 조건식의 답이 나와야한다.
				1. 단독 if 문
				2. if-else 문
				3. 중첩 if 문

			2. switch
				1. switch(표현식 expression)
					1. 표현식에는 int형으로 묵시적으로 변환되는 값이 와야한다.
					2. 표현식에는 enum
					3. 표현식에는 문자열(JDK 1.7 이상)(String)



		2. 반복문
			1. for - 반복 횟수가 정해져 있을때
				1. for( ; ; )
				2. for( : ) - JAVA5에 추가

			2. while - 반복 횟수가 정해져 있지 않을때
			3. do-while - 무조건 1회 이상 실행 시켜야 할 때

		3. 탈출문
			1. break - 반복문을 종료시킨다.
			2. continue - 1회만 skip. 1회만 건너뛴다.
			3. return - 메소드를 종료. return문도 탈출문의 일부라는걸 알아야한다.

		4. 반복문에 레이블을 가질 수 있다. = 이름을 가질 수 있다.
		  break와 continue가 레이블과 같이 사용될 수 있다.
		  레이블을 이용한 흐름제어가 가능하다.



	4. Tip
		1. args이용하기
			1. 이클립스에서도 실행시 args에 인자를 주고 싶을때
				1. Run-Run Configuration
				2. 왼쪽에서 'Java Application'에서 실행할 항목 선택.
				3. 오른쪽 상단 'Arguments'탭
				4. 'Program arguments'에서 옆에 'Variable'선택
				5. 'string_prompt' 선택

			2. 이렇게 하면 이클립스에서 실행해도 입력을 받고 실행한다.



